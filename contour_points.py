#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
contour_points.py creates contour plot based on policies.csv file 
    (generated by policies.py)
Created on Tue Feb 20 07:29:14 2018

@author: peter
"""

import numpy as np
import matplotlib
import matplotlib.pyplot as plt

def plot_contour(C1, C2, C3, C4_LIMITS):
    
    # Import policies
    policies = np.genfromtxt('policies.csv', delimiter=',')
    
    one_step = 4.8
    margin = 0.2 # plotting margin
    
    # Calculate C4(CC1, CC2) values for contour lines
    C1_grid = np.arange(min(C1)-margin,max(C1) + margin,0.01)
    C2_grid = np.arange(min(C2)-margin,max(C2) + margin,0.01)
    [X,Y] = np.meshgrid(C1_grid,C2_grid)
    
    ## CREATE CONTOUR PLOT
    fig = plt.figure() # x = C1, y = C2, cuts = C3, contours = C4
    plt.style.use('classic')
    plt.rcParams.update({'font.size': 14})
    plt.set_cmap('viridis')
    manager = plt.get_current_fig_manager() # Make full screen
    manager.window.showMaximized()
    
    
    ## MAKE PLOT
    for k, c3 in enumerate(C3):
        plt.subplot(2,3,k+1)
        plt.axis('square')
        
        C4 = 4.8*4 - (X + Y + c3)
        C4[np.where(C4<C4_LIMITS[0])]  = float('NaN')
        C4[np.where(C4>C4_LIMITS[1])] = float('NaN')
        
        ## PLOT CONTOURS
        levels = [C4_LIMITS[0]+0.01,1,2,3,4,C4_LIMITS[1]-0.02]
        C = plt.contour(X,Y,C4,levels,zorder=1,vmin=min(C4_LIMITS),vmax=max(C4_LIMITS))
        plt.clabel(C,fmt='%1.1f')
        
        ## PLOT POLICIES
        if c3 == 4.8:
            plt.scatter(one_step,one_step,c='k',marker='s',zorder=3) ## BASELINE
        
        idx_subset = np.where(policies[:,2]==c3)
        policy_subset = policies[idx_subset,:][0]
        plt.scatter(policy_subset[:,0],policy_subset[:,1],c='k',zorder=2)
        
        plt.title('C3=' + str(c3) + ': ' + str(len(policy_subset)) + ' policies',fontsize=14)
        plt.xlabel('C1')
        plt.ylabel('C2')
        plt.xlim((min(C1)-margin, max(C1)+margin))
        plt.ylim((min(C2)-margin, max(C2)+margin))
    
    plt.tight_layout()
    
    # Add colorbar
    fig.subplots_adjust(right=0.8)
    cbar_ax = fig.add_axes([0.85, 0.15, 0.05, 0.7])
    minn, maxx = 0, 4.8
    norm = matplotlib.colors.Normalize(minn, maxx)
    m = plt.cm.ScalarMappable(norm=norm, cmap='viridis')
    m.set_array([])
    cbar = plt.colorbar(m, cax=cbar_ax)
    #fig.colorbar(m, cax=cbar_ax)
    plt.clim(min(C4_LIMITS),max(C4_LIMITS))
    cbar.ax.set_title('C4')
    
    ## SAVE FIGURE
    plt.savefig('contour_justpoints.png', bbox_inches='tight')